// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	"disko/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/login",
				Handler: LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/register",
				Handler: RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/register/vcode",
				Handler: RegisterVcodeHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckBlackList},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/api/me",
					Handler: MeHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/api/logout",
					Handler: LogoutHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/api/files/:id",
					Handler: UpdateFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/api/files/move",
					Handler: MoveFilesHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/api/files/:uuid",
					Handler: DeleteFileHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/api/files",
					Handler: DeleteFilesHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/files/directory",
					Handler: CreateDirectoryHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/files/:id",
					Handler: GetOneFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/files/share/:id",
					Handler: ShareFileHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/files/shared/download/:uuid",
					Handler: DownloadSharedFileHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/files/shared/:uuid",
					Handler: GetSharedFileHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/api/files/shared/:uuid",
					Handler: DeleteSharedFileHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/files/shared/mine",
					Handler: GetMySharedFilesHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/files/shared/save/:uuid",
					Handler: SaveSharedFileHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/files/mine",
					Handler: GetMyFilesHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckBlackList},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/api/files",
					Handler: FileUploadHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/files/download/:uuid",
					Handler: FileDownloadHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithTimeout(1800000*time.Millisecond),
	)
}
